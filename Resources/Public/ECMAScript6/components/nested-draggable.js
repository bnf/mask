function e(){}define(["TYPO3/CMS/Mask/Contrib/vue","TYPO3/CMS/Mask/Contrib/vuedraggable","TYPO3/CMS/Mask/Components/FieldRow"],(function(e,i,l){return e.component("nested-draggable",{props:{fields:Array,icons:Object,global:Object,depth:Number,index:Number,move:Function,sort:Function,fieldHasError:Function,validateKey:Function,language:Object,loadMultiUse:Function,multiUseElements:Object,existingFieldKeyFields:Array,keyWithoutMask:Function,isRoot:Function},components:{draggable:i,fieldRow:l},methods:{uuid(e){if(e.uid)return e.uid;const i=Math.random().toString(16).slice(2);return this.$set(e,"uid",i),e.key!==this.global.maskPrefix&&""!==e.key||!this.global.sctructuralFields.includes(e.name)||this.$set(e,"key",this.global.maskPrefix+i),e.uid},onAdd:function(e){"clone"===e.pullMode&&(this.global.activeField=this.global.clonedField,this.global.currentTab="general",this.depth>0?this.global.activeField.parent=this.$parent.list[this.index]:this.global.activeField.parent={},this.validateKey(this.global.activeField))},removeField:function(e){if(this.fields[e-1]?this.global.activeField=this.fields[e-1]:this.fields[e+1]&&(this.global.activeField=this.fields[e+1]),this.global.deletedFields.push(this.fields[e]),this.existingFieldKeyFields.includes(this.fields[e])){let i=this.existingFieldKeyFields.indexOf(this.fields[e]);this.existingFieldKeyFields.splice(i,1)}this.fields.splice(e,1),0===this.fields.length&&(this.depth>0?this.$emit("set-parent-active",this.index):this.global.activeField={}),this.global.currentTab="general",this.validateKey(this.global.activeField)},setParentActive(e){this.global.activeField=this.fields[e]},isParentField:function(e){return["inline","palette"].includes(e.name)}},template:'\n<draggable\n    tag="ul"\n    class="dragtarget"\n    :list="fields"\n    group="fieldTypes"\n    ghost-class="ghost"\n    @add="onAdd"\n    :move="move"\n    @sort="sort"\n  >\n  <li v-for="(field, index) in fields" :key="uuid(field)" class="mask-field" :class="[{active: global.activeField == field}, \'mask-field--\' + field.name, {\'has-error\': fieldHasError(field)}]">\n    <field-row\n        :global="global"\n        :fields="fields"\n        :field="field"\n        :language="language"\n        :icons="icons"\n        :index="index"\n        :load-multi-use="loadMultiUse"\n        :multi-use-elements="multiUseElements"\n        :field-key="uuid(field)"\n        @remove-field="removeField($event)"\n        :key-without-mask="keyWithoutMask"\n        :is-root="isRoot"\n    ></field-row>\n    <div class="mask-field__dragarea" v-if="isParentField(field)">\n        <nested-draggable\n            @set-parent-active="setParentActive($event)"\n            :depth="depth + 1"\n            :index="index"\n            :fields="field.fields"\n            :icons="icons"\n            :global="global"\n            :move="move"\n            :sort="sort"\n            :field-has-error="fieldHasError"\n            :validate-key="validateKey"\n            :language="language"\n            :load-multi-use="loadMultiUse"\n            :multi-use-elements="multiUseElements"\n            :existing-field-key-fields="existingFieldKeyFields"\n            :key-without-mask="keyWithoutMask"\n            :is-root="isRoot"\n          />\n    </div>\n  </li>\n</draggable>\n        '})}));export{e as default};
